{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Documentation for Product APIS",
    "title": "classification of Product API",
    "version": "1.0.0"
  },
  "host": "localhost:9090",
  "basePath": "/",
  "paths": {
    "/products": {
      "get": {
        "description": "Returns a list of products",
        "tags": [
          "products"
        ],
        "operationId": "listProducts",
        "responses": {
          "200": {
            "$ref": "#/responses/productsResponseWrapper"
          }
        }
      },
      "post": {
        "description": "Adds a new product to the database",
        "tags": [
          "products"
        ],
        "operationId": "createProduct",
        "parameters": [
          {
            "description": "Product data structure to Update or Create.\nNote: the id field is ignored by update and create operations",
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/postOk"
          },
          "400": {
            "$ref": "#/responses/badRequest"
          }
        }
      }
    },
    "/products/{id}": {
      "put": {
        "description": "Updates a product by id",
        "tags": [
          "products"
        ],
        "operationId": "updateProduct",
        "parameters": [
          {
            "description": "Product data structure to Update or Create.\nNote: the id field is ignored by update and create operations",
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "ID",
            "description": "The id of the product for which the operation relates",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/noContentResponse"
          },
          "404": {
            "$ref": "#/responses/errorResponse"
          },
          "422": {
            "$ref": "#/responses/errorValidation"
          }
        }
      },
      "delete": {
        "description": "Update a products details",
        "tags": [
          "products"
        ],
        "operationId": "deleteProduct",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "ID",
            "description": "The id of the product for which the operation relates",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/noContentResponse"
          },
          "404": {
            "$ref": "#/responses/errorResponse"
          },
          "501": {
            "$ref": "#/responses/errorResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "GenericError": {
      "description": "GenericError is a generic error message returned by a server",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "github.com/thatbeardo/go-play/handlers/products"
    },
    "Product": {
      "description": "Product Product Product struct to denote a Product at the coffee shoppe",
      "type": "object",
      "properties": {
        "description": {
          "description": "description",
          "type": "string",
          "x-go-name": "Description"
        },
        "id": {
          "description": "ID",
          "type": "integer",
          "format": "int64",
          "x-go-name": "ID"
        },
        "name": {
          "description": "name",
          "type": "string",
          "x-go-name": "Name"
        },
        "price": {
          "description": "price",
          "type": "number",
          "format": "float",
          "x-go-name": "Price"
        },
        "sku": {
          "description": "s k u",
          "type": "string",
          "x-go-name": "SKU"
        }
      },
      "x-go-package": "github.com/thatbeardo/go-play/models"
    }
  },
  "responses": {
    "createProduct": {
      "description": "Data structure representing a single product",
      "schema": {
        "$ref": "#/definitions/Product"
      }
    },
    "errorResponse": {
      "description": "Generic error message returned as a string",
      "schema": {
        "$ref": "#/definitions/GenericError"
      }
    },
    "noContent": {
      "description": "No content Response"
    },
    "productNotFound": {
      "description": "Product with given ID not found"
    }
  }
}